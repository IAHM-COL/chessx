name: CI

on:
  push:
    branches: [ master, ci-sandbox ]
  pull_request:
    branches: [ master ]

jobs:
  build-unix:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}
    env:
      QT_VERSION: '5.14.2'

    steps:
    - name: Install pulseaudio
      if: ${{ runner.os == 'Linux' }}
      run: brew install pulseaudio
    - name: Look for cached Qt ${{ env.QT_VERSION }}
      id: cache-qt
      uses: actions/cache@v1.2.0
      with:
        path: ../Qt${{ env.QT_VERSION }}
        key: ${{ runner.os }}-Qt${{ env.QT_VERSION }}
    - name: Install Qt ${{ env.QT_VERSION }}
      uses: jurplel/install-qt-action@v2.6.2
      with:
        version: ${{ env.QT_VERSION }}
        dir: ${{ github.workspace }}/../Qt${{ env.QT_VERSION }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Checkout sources
      uses: actions/checkout@v2.1.0
      with:
        ref: ci-sandbox
    - name: Configure
      run: >-
        cmake -S . -B _build
        -DCMAKE_PREFIX_PATH="$Qt5_DIR;$(brew --prefix)/opt/pulseaudio/lib/cmake/PulseAudio"
    - name: Build
      run: cmake --build _build
    - name: Test
      # TODO: resolve the issue with test runner not being able to open
      # libpulse-mainloop-glib.so.0 on Linus
      if: ${{ runner.os != 'Linux' }}
      run: cd _build && ctest -VV

  build-windows:
    runs-on: windows-latest
    env:
      QT_VERSION: '5.14.2'

    steps:
    - name: Look for cached Qt ${{ env.QT_VERSION }}
      id: cache-qt
      uses: actions/cache@v1.2.0
      with:
        path: ../Qt${{ env.QT_VERSION }}
        key: ${{ runner.os }}-Qt${{ env.QT_VERSION }}
    - name: Install Qt ${{ env.QT_VERSION }}
      uses: jurplel/install-qt-action@v2.6.2
      with:
        version: ${{ env.QT_VERSION }}
        dir: ${{ github.workspace }}/../Qt${{ env.QT_VERSION }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Checkout sources
      uses: actions/checkout@v2.1.0
      with:
        ref: ci-sandbox
    # - name: Configure
    #   run: cmake -S . -B _build -DCMAKE_PREFIX_PATH="$Qt5_DIR"
    # - name: Build
    #   run: cmake --build _build
    # - name: Test
    #   run: cd _build && ctest -VV

  build-min:
    # it's tempting to use an older "ubuntu-16.04" for speedup
    # but it comes with GCC 5.4.0 which does not support c++17
    runs-on: ubuntu-latest
    env:
      QT_VERSION: '5.7'
  
    steps:
    - name: Cache Qt ${{ env.QT_VERSION }}
      id: cache-qt
      uses: actions/cache@v1.2.0
      with:
        path: ../Qt${{ env.QT_VERSION }}
        key: ${{ runner.os }}-Qt${{ env.QT_VERSION }}

    - name: Install Qt ${{ env.QT_VERSION }}
      uses: jurplel/install-qt-action@v2.6.2
      with:
        version: ${{ env.QT_VERSION }}
        dir: ${{ github.workspace }}/../Qt${{ env.QT_VERSION }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Checkout sources
      uses: actions/checkout@v2.1.0
      with:
        ref: ci-sandbox

    - name: Configure
      run: >-
        cmake -S . -B _build -DCMAKE_PREFIX_PATH="$Qt5_DIR"
        -DENABLE_SOUNDS=OFF
        -DENABLE_TTS=OFF
    - name: Build
      run: cmake --build _build
    - name: Test
      run: cd _build && ctest -V

